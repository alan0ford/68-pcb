/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define FUN 1

/ {
    macros {
        /* è: `E */

        ma_1: ma_1 {
            label = "ma_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp GRAVE>, <&macro_tap>, <&kp E>;
        };

        /* ù: `U */

        ma_2: ma_2 {
            label = "ma_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp GRAVE>, <&macro_tap>, <&kp U>;
        };

        /* ì: `I */

        ma_3: ma_3 {
            label = "ma_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp GRAVE>, <&macro_tap>, <&kp I>;
        };

        /* ò: `O */

        ma_4: ma_4 {
            label = "ma_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp GRAVE>, <&macro_tap>, <&kp O>;
        };

        /* à: `A */

        ma_5: ma_5 {
            label = "ma_5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp GRAVE>, <&macro_tap>, <&kp A>;
        };

        /* ': '  */

        ma_6: ma_6 {
            label = "ma_6";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp SQT>, <&macro_tap>, <&kp SPACE>;
        };

        /* `:`  */

        ma_7: ma_7 {
            label = "ma_7";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp GRAVE>, <&macro_tap>, <&kp SPACE>;
        };

        /* ²: Alt253 */

        ma_8: ma_8 {
            label = "ma_8";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N2>,
                <&macro_tap>,
                <&kp KP_N5>,
                <&macro_tap>,
                <&kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        /* ~: Alt126 */

        ma_9: ma_9 {
            label = "ma_9";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1>,
                <&macro_tap>,
                <&kp KP_N2>,
                <&macro_tap>,
                <&kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        /* ×: Alt0215 */

        ma_10: ma_10 {
            label = "ma_10";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0>,
                <&macro_tap>,
                <&kp KP_N2>,
                <&macro_tap>,
                <&kp KP_N1>,
                <&macro_tap>,
                <&kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        /* ÷: Alt0247 */

        ma_11: ma_11 {
            label = "ma_11";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0>,
                <&macro_tap>,
                <&kp KP_N2>,
                <&macro_tap>,
                <&kp KP_N4>,
                <&macro_tap>,
                <&kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };

        ma_12: ma_12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_press>,
                <&kp RIGHT_SHIFT>,
                <&macro_tap>,
                <&kp SEMICOLON>,
                <&macro_release>,
                <&kp RIGHT_SHIFT>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            label = "MA_12";
        };

        ma_13: ma_13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LEFT_WIN>;

            label = "MA_13";
        };
    };
};

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0   &kp MINUS         &kp EQUAL          &kp BACKSPACE   &ma_13          &kp PAGE_UP
&lt 1 TAB         &kp Q         &kp W         &kp E         &kp R         &kp T         &kp Y         &kp U         &kp I         &kp O         &kp P          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH   &kp DEL         &kp PAGE_DOWN
&kp CAPSLOCK      &kp A         &kp S         &kp D         &kp F         &kp G         &kp H         &kp J         &kp K         &kp L         &kp SEMICOLON  &ma_6             &none              &kp ENTER       &none           &none
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C         &kp V         &kp B         &kp N         &kp M         &kp COMMA     &kp PERIOD    &kp SLASH      &none             &none              &kp RSHIFT      &kp UP_ARROW    &none
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &none         &none         &kp SPACE     &none         &none         &none         &mo 1         &kp RIGHT_ALT  &none             &kp RIGHT_CONTROL  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
            >;
        };

        function_layer {
            bindings = <
&ma_7   &kp F1      &kp F2       &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &kp PRINTSCREEN  &trans        &trans
&trans  &ma_8       &trans       &ma_1   &trans  &ma_9   &trans  &ma_2   &ma_3   &ma_4   &ma_10   &trans   &trans   &trans           &trans        &trans
&trans  &ma_5       &trans       &ma_11  &trans  &ma_12  &trans  &trans  &trans  &trans  &trans   &trans   &none    &kp HOME         &none         &none
&trans  &trans      &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &none    &none    &trans           &kp C_VOL_UP  &none
&trans  &kp C_MENU  &kp C_POWER  &none   &none   &trans  &none   &none   &none   &trans  &mo 2    &none    &trans   &trans           &kp C_VOL_DN  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans          &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans          &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &out OUT_TOG  &bt BT_NXT    &bt BT_CLR_ALL  &bt BT_PRV    &bootloader   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans          &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
